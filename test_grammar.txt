PROGRAM -> SUB_PROGRAM_1 PROGRAM .
PROGRAM -> .
SUB_PROGRAM_1 -> TYPE IDENTIFIER SUB_PROGRAM_2 .
SUB_PROGRAM_2 -> FUNCTION_DECL .
SUB_PROGRAM_2 -> VARIABLE_DECL .
FUNCTION_DECL -> PARAMETER_LIST COMPOUND_STMT .
PARAMETER_LIST -> open_parenthesis PARAMETER_LIST_1 close_parenthesis .
PARAMETER_LIST_1 -> PARAMETERS .
PARAMETER_LIST_1 -> .
PARAMETERS -> PARAMETER_DECL PARAMETER_LOOP .
PARAMETER_LOOP -> comma PARAMETER_DECL PARAMETER_LOOP .
PARAMETER_LOOP -> .
PARAMETER_DECL -> TYPE IDENTIFIER DECLARATOR .
VARIABLE_DECL -> DECLARATOR_LIST semicolon .
DECLARATOR_LIST -> INIT_DECLARATOR DECLARATOR_LOOP .
DECLARATOR_LOOP -> comma INIT_DECLARATOR DECLARATOR_LOOP .
DECLARATOR_LOOP -> .
INIT_DECLARATOR -> DECLARATOR VARIABLE_DECL_1 .
DECLARATOR -> open_bracket DECLARATOR_1 close_bracket .
DECLARATOR_1 -> int_literal .
DECLARATOR_1 -> .
VARIABLE_DECL_1 -> equal_sign INITIALIZER .
VARIABLE_DECL_1 -> .
INITIALIZER -> EXPR .
INITIALIZER -> open_brace EXPR LIST_EXPR close_brace .
LIST_EXPR -> comma EXPR LIST_EXPR .
LIST_EXPR -> .
COMPOUND_STMT -> open_brace COMPOUND_STMT_1 COMPOUND_STMT_2 close_brace .
COMPOUND_STMT_1 -> TYPE VARIABLE_DECL COMPOUND_STMT_1 .
COMPOUND_STMT_1 -> .
COMPOUND_STMT_2 -> STATEMENT COMPOUND_STMT_2 .
COMPOUND_STMT_2 -> .

STATEMENT -> IF_STMT .
STATEMENT -> FOR_STMT .
STATEMENT -> WHILE_STMT .
STATEMENT -> BREAK_STMT .
STATEMENT -> CONTINUE_STMT .
STATEMENT -> RETURN_STMT .
STATEMENT -> EXPR_STMT .

IF_STMT -> if open_parenthesis EXPR close_parenthesis COMPOUND_STMT ELSE_STMT .
ELSE_STMT -> else COMPOUND_STMT .
ELSE_STMT -> .
FOR_STMT -> for open_parenthesis EXPR_OR_EPSILON semicolon EXPR_OR_EPSILON semicolon EXPR_OR_EPSILON close_parenthesis COMPOUND_STMT .
WHILE_STMT -> while open_parenthesis EXPR close_parenthesis COMPOUND_STMT .
BREAK_STMT -> break semicolon .
CONTINUE_STMT -> continue semicolon .
RETURN_STMT -> return EXPR_OR_EPSILON semicolon .
EXPR_STMT -> EXPR_OR_EPSILON semicolon .
EXPR_OR_EPSILON -> EXPR .
EXPR_OR_EPSILON -> .

EXPR -> ASSIGNMENT_EXPR .
ASSIGNMENT_EXPR -> CONDITION_OR_EXPR ASSIGNMENT_EXPR_1 .
ASSIGNMENT_EXPR_1 -> equal_sign CONDITION_OR_EXPR ASSIGNMENT_EXPR_1 .
ASSIGNMENT_EXPR_1 -> .

CONDITION_OR_EXPR -> CONDITION_AND_EXPR CONDITION_OR_EXPR_1 .
CONDITION_OR_EXPR_1 -> double_vertical_bar CONDITION_AND_EXPR CONDITION_OR_EXPR_1 .
CONDITION_OR_EXPR_1 -> .

CONDITION_AND_EXPR -> EQUALITY_EXPR CONDITION_AND_EXPR_1 .
CONDITION_AND_EXPR_1 -> double_ampersand EQUALITY_EXPR CONDITION_AND_EXPR_1 .
CONDITION_AND_EXPR_1 -> .

EQUALITY_EXPR -> RELATIONAL_EXPR EQUALITY_EXPR_1 .
EQUALITY_EXPR_1 -> equal_to RELATIONAL_EXPR EQUALITY_EXPR_1 .
EQUALITY_EXPR_1 -> not_equal_to RELATIONAL_EXPR EQUALITY_EXPR_1 .
EQUALITY_EXPR_1 -> .

RELATIONAL_EXPR -> ADDITIVE_EXPR RELATIONAL_EXPR_1 .
RELATIONAL_EXPR_1 -> less_than ADDITIVE_EXPR RELATIONAL_EXPR_1 .
RELATIONAL_EXPR_1 -> less_than_or_equal_to ADDITIVE_EXPR RELATIONAL_EXPR_1 .
RELATIONAL_EXPR_1 -> greater_than ADDITIVE_EXPR RELATIONAL_EXPR_1 .
RELATIONAL_EXPR_1 -> greater_than_or_equal_to ADDITIVE_EXPR RELATIONAL_EXPR_1 .
RELATIONAL_EXPR_1 -> .

ADDITIVE_EXPR -> MULTIPLICATIVE_EXPR ADDITIVE_EXPR_1 .
ADDITIVE_EXPR_1 -> plus MULTIPLICATIVE_EXPR ADDITIVE_EXPR_1 .
ADDITIVE_EXPR_1 -> minus MULTIPLICATIVE_EXPR ADDITIVE_EXPR_1 .
ADDITIVE_EXPR_1 -> .

MULTIPLICATIVE_EXPR -> UNARY_EXPR MULTIPLICATIVE_EXPR_1 .
MULTIPLICATIVE_EXPR_1 -> star UNARY_EXPR MULTIPLICATIVE_EXPR_1 .
MULTIPLICATIVE_EXPR_1 -> slash UNARY_EXPR MULTIPLICATIVE_EXPR_1 .
MULTIPLICATIVE_EXPR_1 -> .

UNARY_EXPR -> PRIMARY_EXPR UNARY_EXPR_1 .
UNARY_EXPR_1 -> not UNARY_EXPR_1 .
UNARY_EXPR_1 -> .

PRIMARY_EXPR -> IDENTIFIER PRIMARY_EXPR_1 .
PRIMARY_EXPR -> open_parenthesis EXPR close_parenthesis .
PRIMARY_EXPR -> int_literal .
PRIMARY_EXPR -> float_literal .
PRIMARY_EXPR -> bool_literal .
PRIMARY_EXPR -> string_literal .
PRIMARY_EXPR_1 -> ARG_LIST .
PRIMARY_EXPR_1 -> open_bracket EXPR close_bracket .
PRIMARY_EXPR_1 -> .
ARG_LIST -> open_parenthesis ARG_LIST_1 close_parenthesis .
ARG_LIST_1 -> ARG ARG_LIST_LOOP .
ARG_LIST_1 -> .
ARG_LIST_LOOP -> comma ARG ARG_LIST_LOOP .
ARG_LIST_LOOP -> .
ARG -> EXPR .

IDENTIFIER -> id .
TYPE -> void .
TYPE -> boolean .
TYPE -> int .
TYPE -> float .